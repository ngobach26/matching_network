continue
current_user = User.find(jwt_payload["sub"])
current_user
jwt_payload
continue
JWT.decode(request.headers["Authorization"].split(" ").last, Rails.application.credentials.devise[:jwt_secret_key]).first
request.headers["Authorization"]
continue
JWT.decode(request.env["warden-jwt_auth.token"], Rails.application.credentials.devise[:jwt_secret_key])
Rails.application.credentials.devise[:jwt_secret_key]
Rails.application.credentials.devise_jwt_secret_key!
JWT.decode(request.env["warden-jwt_auth.token"],Rails.application.credentials.devise_jwt_secret_key!)
request.env["warden-jwt_auth.token"]
continue
request.headers["Authorization"]
JWT.decode(request.headers["Authorization"].split(" ").last, Rails.application.credentials.devise_jwt_secret_key!)
JWT.decode(request.headers["Authorization"].split(" ").last, Rails.application.credentials.devise_jwt_secret_key!).first
request.env['warden-jwt_auth.token']
continue
request.headers["Authorization"]
request
continue
UserSerializer.new(current_user).serializable_hash[:data][:attributes]
current_user
continue

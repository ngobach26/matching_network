version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: user_service_development
      MYSQL_USER: user_service
      MYSQL_PASSWORD: user_service_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user_service
    container_name: user_service
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3000:80"
    environment:
      RAILS_ENV: development
    volumes:
      - ./user_service:/rails
      - /rails/vendor
    networks:
      - app_network

  matching-service:
    build: ./matching_service
    container_name: matching_service
    restart: always
    depends_on:
      - mongo
    ports:
      - "8001:8001"
    environment:
      MONGO_URI: mongodb://mongo:27017/matching_service
      JWT_SECRET_KEY: your_jwt_key
    volumes:
      - ./matching_service:/app
    networks:
      - app_network

  web:
    build: ./web
    ports:
      - "3001:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev

volumes:
  mysql_data:
  mongo_data:
  mongo_config:

networks:
  app_network:
    driver: bridge
